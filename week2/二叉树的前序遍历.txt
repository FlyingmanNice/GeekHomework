/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    //Preorder: root, left,right
    // 1. 递归法， 时间复杂度O(n),空间复杂度O(n)
private:
    void preorder(TreeNode* root, vector<int>& vec)
    {
        if(root == nullptr)
            return;

        vec.push_back(root->val);
        preorder(root->left, vec);
        preorder(root->right, vec);
    }
public:
    vector<int> preorderTraversal(TreeNode* root) {
        if(root == nullptr)
            return {};

        vector<int> ans;
        preorder(root,ans);
        return ans;
    }
};